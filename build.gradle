import io.github.gradlenexus.publishplugin.InitializeNexusStagingRepository

plugins {
    id 'io.github.gradle-nexus.publish-plugin'
}

version = projectVersion
ext.set('grailsVersion', libs.versions.grails.asProvider().get())
ext.set('isSnapshot', projectVersion.endsWith('-SNAPSHOT'))
ext.set('isReleaseVersion', !isSnapshot)

if (isReleaseVersion) {
    nexusPublishing {
        String nexusUser = findProperty('sonatypeUsername')
        String nexusPass = findProperty('sonatypePassword')
        String nexusStagingProfileId = findProperty('sonatypeStagingProfileId')
        repositories {
            sonatype {
                nexusUrl = uri('https://s01.oss.sonatype.org/service/local/')
                username = nexusUser
                password = nexusPass
                stagingProfileId = nexusStagingProfileId
            }
        }
    }
}
subprojects {
    apply plugin: 'groovy'

    version = rootProject.version
    repositories {
        mavenCentral()
        maven { url = 'https://repo.grails.org/grails/core' }
        if (libs.versions.groovy.get().endsWith('-SNAPSHOT')) {
            maven {
                name = 'JFrog Groovy snapshot repo'
                url = 'https://groovy.jfrog.io/artifactory/libs-snapshot-local'
            }
        }
    }
    dependencies {
        implementation platform(libs.grails.bom)
    }
}

// Do not generate extra load on Nexus with new staging repository if signing fails
tasks.withType(InitializeNexusStagingRepository).configureEach {
    shouldRunAfter tasks.withType(Sign)
}